{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","title","year","summary","poster","genres","className","src","alt","style","backgroundColor","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","medium_cover_image","React","Component","ReactDom","render","StrictMode","document","getElementById"],"mappings":"qRAmCeA,MA/Bf,YAA2D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC/C,OAAO,qBAAKC,UAAU,QAAf,SACH,gCACI,qBAAKA,UAAU,cAAcC,IAAKH,EAAQI,IAAKP,EAAOA,MAAOA,IAC7D,oBAAIK,UAAU,eAAeG,MAAO,CAACC,gBAAiB,SAAtD,SAAiET,IACjE,oBAAIK,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,SAAd,SACKD,EAAOM,KAAI,SAACC,EAAOC,GAAR,OAAkB,oBAAgBP,UAAU,gBAA1B,SAEzBM,GAFkCC,QAM3C,oBAAGP,UAAU,iBAAb,UAA+BH,EAAQW,MAAM,EAAG,KAAhD,eC4BGC,G,kNAvCbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,4DADvC,gBACWJ,EADX,EACHK,KAAOA,KAAOL,OACrBM,QAAQC,IAAIP,GAGZ,EAAKQ,SAAS,CAAER,SAAQD,WAAW,IALzB,2C,uDASZ,WACEU,KAAKR,c,oBAKP,WAAU,IAAD,EACuBQ,KAAKX,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACA,yBAASZ,UAAU,YAAnB,SACCW,EACD,qBAAKX,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAED,qBAAKA,UAAU,SAAf,SACGY,EAAOP,KAAI,SAAAiB,GAAK,OAAI,cAAC,EAAD,CAAsB5B,GAAI4B,EAAM5B,GAAIC,MAAO2B,EAAM3B,MAAOC,KAAM0B,EAAM1B,KAAMC,QAASyB,EAAMzB,QAASC,OAAQwB,EAAMC,mBAAoBxB,OAAQuB,EAAMvB,QAAtIuB,EAAM5B,e,GA9B5B8B,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,a","file":"static/js/main.0883e8a4.chunk.js","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ id, title, year, summary, poster, genres}){\n    return <div className=\"movie\">\n        <div>\n            <img className=\"movie__data\" src={poster} alt={title} title={title}></img>\n            <h3 className=\"movie__title\" style={{backgroundColor: \"white\"}}>{title}</h3>\n            <h3 className=\"movie__year\">{year}</h3>\n            <ul className=\"genres\">\n                {genres.map((genre, index) => <li key={index} className=\"genres__genre\">\n                    \n                    {genre}\n                </li>)}\n\n            </ul>\n            <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\n            \n        \n        </div>\n        \n    </div>\n    \n}\n\nMovie.propTypes = {\n    id: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n    year: propTypes.number.isRequired,\n    summary: propTypes.string.isRequired,\n    poster: propTypes.string.isRequired,\n    genres: propTypes.arrayOf(propTypes.string).isRequired\n}\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  }\n  \n  getMovies = async () => {\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    console.log(movies)\n//  const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n//  console.log(movies.data.data.movies)\n    this.setState({ movies, isLoading: false })\n//  this.setState({movies:movies})\n  }\n\n  componentDidMount(){\n    this.getMovies()\n    //    setTimeout(() => {this.setState({ isLoading: false })}, 3000)\n\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n    <section className=\"container\">\n    {isLoading ?\n    <div className=\"loader\">\n      <span className=\"loader__text\">Loading...</span> \n    </div> : \n     <div className=\"movies\">\n       {movies.map(movie => <Movie key={movie.id} id={movie.id} title={movie.title} year={movie.year} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />)} \n     </div> \n    }\n    </section> )\n  }\n}\n\n\n\n\nexport default App;\n\n\n/* <class component> 연습, setState 연습, componentXmount 연습\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    console.log(\"hello\");\n  }\n\n  state={\n    count: 0,\n    bount: 2\n  };\n\n\nadd = () => {\n  console.log(\"add\")\n  this.setState(current => ({ count: current.count + 1}))\n//  this.setState({ count: this.state.count + 1});\n\n}\n\nminus = () => {\n  console.log(\"minus\")\n  this.setState(current => ({ count: current.count - 1}));\n//   this.setState({ count: this.state.count - 1});\n}\nreset = () => {\n  console.log(\"reset\");\n  this.setState(current => ({count: 0}))\n}\n\ncomponentDidMount(){\n  console.log(\"component rendered\")\n}\ncomponentDidUpdate(){\n  console.log(\"i just did update\")\n}\ncomponentWillUnmount(){\n  console.log(\"good bye!\")\n}\n\n render(){\n   console.log(\"I'm rendering\")\n   return (\n   <div>\n     <h1>the number is: {this.state.count}</h1>\n     <button onClick={this.add}>Add</button>\n     <button onClick={this.minus}>minus</button>\n     <button onClick={this.reset}>reset</button>\n     <h2>this bount number is: {this.state.bount}</h2>\n  </div>\n    )\n }\n}\n\n*/\n\n\n/* <function component> 연습\n\nfunction Food( {name, rating} ){\n  return <div>\n    <h1>I Like this food: {name}</h1>\n    <h2>rating: {rating}dd</h2>\n  </div>\n}\n\nconst foodItems = [\n  {id: 1, name: \"kimchi\", ra: \"1\"},\n  {id: 2, name: \"bap\", ra: \"2\"},\n  {id: 3, name: \"ramen\", ra: \"3\"}\n]\n\nFood.propTypes = {\n  name: PropTypes.string.isRequired,\n  rating: PropTypes.string.isRequired\n}\n\nfunction renderFood(item){\n  return <Food key={item.id} name={item.name} rating={item.ra} />\n}\n\nfunction App(){\n  return (\n    <div>\n    {foodItems.map(renderFood)}\n  </div>\n  )\n}\n\n*/","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('tomato')\n);"],"sourceRoot":""}